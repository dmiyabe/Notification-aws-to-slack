AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: "AWS_notify\nNotify Slack to AWS \n"
Globals:
  Function:
    Timeout: 3
Resources:
  AWSIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: NotifySlackLambdaPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: '*'
  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://gnk327-lambda-bucket/xxxxxxxxxxxxxxxxxxxxxxxx
      Handler: notify_awsToslack.lambda_handler
      Runtime: python3.7
      Role:
        Fn::GetAtt:
        - AWSIamRole
        - Arn
      Events:
        NotifySlack:
          Type: Schedule
          Properties:
            Schedule: cron(40 14 ? * * *)
Outputs:
  HelloWorldFunction:
    Description: Hello World Lambda Function ARN
    Value:
      Fn::GetAtt:
      - HelloWorldFunction
      - Arn
  HelloWorldFunctionIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value:
      Fn::GetAtt:
      - AWSIamRole
      - Arn
